{"version":3,"sources":["api/apiСonstants/imageRequestError.ts","store/asyncActions/image.ts","api/image.ts","static/icons/add_photo.svg","uiComponents/ImageUpload.tsx","components/addComponents/AddNewEntity.tsx","components/addComponents/FormAddTeam.tsx","helpers/functions/validateYearFoundation.ts","components/addComponents/AddNewTeam.tsx"],"names":["imageRequestErrors","400","401","500","502","loadNewImage","createAsyncThunk","imageData","a","dispatch","addEntityError","actions","addErrorMessage","errorMessage","url","body","file","token","post","result","imageLoadData","addSrcImageServer","srcImage","isCustomError","status","actionCreators","clearSrcImage","addSrcImageExisting","ImageUpload","React","memo","defaultImage","useSelector","state","authDataUser","authData","useCustomActions","downloadImage","useEffect","InputLoad","onChange","target","files","fileImage","formData","FormData","set","type","accept","ImageContainer","imageSrc","AddHover","styled","input","div","addPhotoIcon","mobileVersionLayout","clearErrorMessage","AddNewEntity","isTeam","imageEntity","children","t","useTranslation","ContainerAdd","HeaderAdd","text","to","routePaths","teams","players","disabled","Separator","BodyAdd","Notification","theme","colors","white","mobliSizeCard","span","lightGrey","mobileSizeGridForm","FormAddTeam","addNewTeam","teamUpdate","history","useHistory","useForm","register","handleSubmit","errors","trigger","cancelAddNewEntity","useCallback","replace","FormAdd","onSubmit","name","ref","value","id","FieldInputData","startType","isError","teamName","formAddTeamsErrors","defaultValue","required","minLength","maxLength","pattern","regExpCommandName","division","regExpDivision","conference","regExpConference","foundationYear","regExpYear","validate","isNotYoung","currentDateYear","Date","getFullYear","Number","validateYearFoundationYoung","isNotOld","validateYearFoundationOld","BtnGroup","ButtonAction","onClick","isNegativeStyle","isAdding","size","Object","keys","length","form","updateCurrentTeam","useParams","teamsDataReducer","entities","undefined","addTeam","updateTeam","addNewEntity","data","team","imageUrl","payload","push"],"mappings":"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","file":"static/js/8.33cd32e5.chunk.js","sourcesContent":["interface IErrors {\r\n  [key: number]: string;\r\n}\r\n\r\nexport const imageRequestErrors: IErrors = {\r\n  400: 'Image or format is not correct',\r\n  401: 'You are not logged in, log in',\r\n  500: 'Server error, please try again later',\r\n  502: 'Server error, please try again later',\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { saveImage } from '../../api/image';\r\nimport { IImageData } from '../../helpers/interfaces/requestInterfaces/Image';\r\nimport { imageLoadData } from '../reducers/image';\r\nimport { imageRequestErrors } from '../../api/apiСonstants/imageRequestError';\r\nimport { addEntityError } from '../reducers/addingError';\r\n\r\nexport const loadNewImage = createAsyncThunk('imageLoad',\r\n  async (imageData: IImageData, { dispatch }) => {\r\n    dispatch(addEntityError.actions.addErrorMessage({ errorMessage: '' }));\r\n    try {\r\n      const result = await saveImage('Image/SaveImage', imageData.file, imageData.token);\r\n      dispatch(imageLoadData.actions.addSrcImageServer({ srcImage: result }));\r\n    } catch (error) {\r\n      if (error.isCustomError) {\r\n        dispatch(addEntityError.actions.addErrorMessage({\r\n          errorMessage: imageRequestErrors[error.status],\r\n        }));\r\n      }\r\n    }\r\n  });\r\n","import { post } from './index';\r\n\r\nexport const saveImage = (url: string, body: FormData, token: string) => (\r\n  post<object>(url, body, token)\r\n);\r\n","export default __webpack_public_path__ + \"static/media/add_photo.06bd5fc8.svg\";","import React, { FC, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport addPhotoIcon from '../static/icons/add_photo.svg';\r\nimport { mobileVersionLayout } from '../helpers/constants/mobileSize';\r\nimport { useCustomActions } from '../helpers/functions/useCustomActions';\r\nimport { imageLoadData } from '../store/reducers/image';\r\nimport { loadNewImage } from '../store/asyncActions/image';\r\nimport { StoreReducer } from '../helpers/interfaces/StoreReducer';\r\n\r\ninterface IProps {\r\n  defaultImage?: string | undefined;\r\n}\r\n\r\nconst actionCreators = {\r\n  loadNewImage,\r\n  clearSrcImage: imageLoadData.actions.clearSrcImage,\r\n  addSrcImageExisting: imageLoadData.actions.addSrcImageExisting,\r\n};\r\n\r\nexport const ImageUpload: FC<IProps> = React.memo(({\r\n  defaultImage,\r\n}) => {\r\n  const { token, srcImage } = useSelector((state: StoreReducer) => ({\r\n    token: state.authDataUser.authData.token,\r\n    srcImage: state.imageLoadData.srcImage,\r\n  }));\r\n\r\n  const {\r\n    clearSrcImage,\r\n    loadNewImage: downloadImage,\r\n    addSrcImageExisting,\r\n  } = useCustomActions(actionCreators);\r\n\r\n  useEffect(() => {\r\n    clearSrcImage();\r\n    if (defaultImage) {\r\n      addSrcImageExisting({ srcImage: defaultImage });\r\n    }\r\n  }, [defaultImage]);\r\n\r\n  const loadImage = (imageData: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (imageData.target.files) {\r\n      const fileImage = imageData.target.files[0];\r\n      const formData = new FormData();\r\n      formData.set('file', fileImage);\r\n      downloadImage({ file: formData, token });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <InputLoad onChange={loadImage} type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" />\r\n      <ImageContainer imageSrc={srcImage}>\r\n        <AddHover />\r\n      </ImageContainer>\r\n    </label>\r\n  );\r\n});\r\n\r\nconst InputLoad = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst AddHover = styled.div`\r\n  border-radius: 10px;\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(156, 156, 156, 0.5) url(${addPhotoIcon}) no-repeat center center;\r\n  background-size: 74px 75px;\r\n  transition: 1s ease;\r\n\r\n  &:hover {\r\n    background-color: rgba(48, 48, 48, 0.8);\r\n  }\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    background-size: 41px 40px;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div<{ imageSrc: string; }>`\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  width: 336px;\r\n  height: 261px;\r\n  position: relative;\r\n  background: ${({ imageSrc }) => `url(${imageSrc}) no-repeat center 6px`};\r\n  background-size: contain;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    width: 185px;\r\n    height: 144px;\r\n  }\r\n`;\r\n","import React, { FC, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TextLink } from '../../uiComponents/TextLink';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { ImageUpload } from '../../uiComponents/ImageUpload';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport { NotificationMessage } from '../../uiComponents/NotificationMessage';\r\nimport { addEntityError } from '../../store/reducers/addingError';\r\nimport { useCustomActions } from '../../helpers/functions/useCustomActions';\r\nimport { mobileSizeGridForm, mobliSizeCard } from '../../helpers/constants/mobileSize';\r\n\r\ninterface IProps {\r\n  isTeam: boolean;\r\n  imageEntity?: string | undefined;\r\n}\r\n\r\nconst actionCreators = {\r\n  clearErrorMessage: addEntityError.actions.clearErrorMessage,\r\n};\r\n\r\nexport const AddNewEntity: FC<IProps> = React.memo(({\r\n  isTeam,\r\n  imageEntity,\r\n  children,\r\n}) => {\r\n  const { clearErrorMessage } = useCustomActions(actionCreators);\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    clearErrorMessage();\r\n  }, []);\r\n\r\n  const { errorMessage } = useSelector((state: StoreReducer) => (\r\n    {\r\n      errorMessage: state.addEntityError.errorMessage,\r\n    }));\r\n\r\n  return (\r\n    <ContainerAdd>\r\n      <HeaderAdd>\r\n        <TextLink\r\n          text={isTeam ? t('team:teams') : t('player:players')}\r\n          to={isTeam ? routePaths.teams : routePaths.players}\r\n          disabled={false}\r\n        />\r\n        <Separator>/</Separator>\r\n        <TextLink text={isTeam ? t('team:addTeam') : t('player:addPlayer')} to=\"#\" disabled />\r\n      </HeaderAdd>\r\n      <BodyAdd>\r\n        <ImageUpload defaultImage={imageEntity} />\r\n        {children}\r\n        {errorMessage !== '' && <Notification><NotificationMessage text={errorMessage} /></Notification>}\r\n      </BodyAdd>\r\n    </ContainerAdd>\r\n  );\r\n});\r\n\r\nconst ContainerAdd = styled.div`\r\n  flex-grow: 0.5;\r\n  margin: 32px auto auto;\r\n  border-radius: 10px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    border-radius: 0;\r\n    flex-grow: 1;\r\n    margin: 16px auto auto;\r\n  }\r\n`;\r\n\r\nconst HeaderAdd = styled.div`\r\n  padding: 26px 0 19px 32px;\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    padding: 15px 0 15px 16px;\r\n  }\r\n`;\r\n\r\nconst Separator = styled.span`\r\n  color: ${({ theme }) => theme.colors.lightGrey};\r\n  margin: 0 4px;\r\n`;\r\n\r\nconst BodyAdd = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  padding: 48px 0 48px 73px;\r\n  position: relative;\r\n\r\n  & > label:nth-child(1) {\r\n    margin-right: 136px;\r\n    align-self: flex-start;\r\n  }\r\n\r\n  @media (max-width: ${mobileSizeGridForm}) {\r\n    flex-direction: column;\r\n    padding: 48px 73px;\r\n\r\n    & > label:nth-child(1) {\r\n      margin-right: 0;\r\n      align-self: center;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    padding: 48px 24px;\r\n\r\n    & > label:nth-child(1) {\r\n      margin-right: 0;\r\n      margin-bottom: 48px;\r\n      align-self: center;\r\n    }\r\n  }\r\n  \r\n  @media(max-width: 370px) {\r\n    padding: 48px 20px;\r\n  }\r\n`;\r\n\r\nconst Notification = styled.div`\r\n  position: fixed;\r\n  top: 80px;\r\n  right: 36px;\r\n  width: 470px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    width: auto;\r\n    top: 60px;\r\n    right: 20%;\r\n    left: 20%;\r\n  }\r\n`;\r\n","import React, { FC, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FieldInputData } from '../../uiComponents/FieldInputData';\r\nimport { ButtonAction } from '../../uiComponents/ButtonAction';\r\nimport { ITeam } from '../../helpers/interfaces/storeInterfaces/Team';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { IFormAddTeam } from '../../helpers/interfaces/componentsInterfaces/StateAndEvents';\r\nimport {\r\n  regExpYear, regExpCommandName, regExpDivision, regExpConference,\r\n} from '../../helpers/constants/regularExp';\r\nimport { formAddTeamsErrors } from '../../helpers/constants/formErrors';\r\nimport { validateYearFoundationOld, validateYearFoundationYoung } from '../../helpers/functions/validateYearFoundation';\r\n\r\ninterface IProps {\r\n  addNewTeam: (data: IFormAddTeam) => void;\r\n  teamUpdate: ITeam | undefined;\r\n}\r\n\r\nexport const FormAddTeam: FC<IProps> = React.memo(({\r\n  addNewTeam,\r\n  teamUpdate,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  const cancelAddNewEntity = useCallback(() => {\r\n    history.replace(routePaths.teams);\r\n  }, []);\r\n\r\n  return (\r\n    <FormAdd onSubmit={handleSubmit(addNewTeam)}>\r\n      {teamUpdate && <input type=\"hidden\" name=\"id\" ref={register} value={teamUpdate.id} />}\r\n      <FieldInputData\r\n        text={t('team:name')}\r\n        disabled={false}\r\n        startType=\"text\"\r\n        type=\"text\"\r\n        isError={!!errors.teamName}\r\n        errorMessage={formAddTeamsErrors[errors.teamName?.type]}\r\n        onChange={() => trigger('teamName')}\r\n        name=\"teamName\"\r\n        defaultValue={teamUpdate ? teamUpdate.name : ''}\r\n        register={register({\r\n          required: true,\r\n          minLength: 3,\r\n          maxLength: 25,\r\n          pattern: regExpCommandName,\r\n        })}\r\n      />\r\n      <FieldInputData\r\n        text={t('team:division')}\r\n        disabled={false}\r\n        startType=\"text\"\r\n        type=\"text\"\r\n        isError={!!errors.division}\r\n        errorMessage={formAddTeamsErrors[errors.division?.type]}\r\n        name=\"division\"\r\n        onChange={() => trigger('division')}\r\n        defaultValue={teamUpdate ? teamUpdate.division : ''}\r\n        register={register({\r\n          pattern: regExpDivision,\r\n          minLength: 5,\r\n          maxLength: 20,\r\n        })}\r\n      />\r\n      <FieldInputData\r\n        text={t('team:conference')}\r\n        disabled={false}\r\n        startType=\"text\"\r\n        type=\"text\"\r\n        isError={!!errors.conference}\r\n        errorMessage={formAddTeamsErrors[errors.conference?.type]}\r\n        name=\"conference\"\r\n        onChange={() => trigger('conference')}\r\n        defaultValue={teamUpdate ? teamUpdate.conference : ''}\r\n        register={register({\r\n          pattern: regExpConference,\r\n          minLength: 3,\r\n          maxLength: 20,\r\n        })}\r\n      />\r\n      <FieldInputData\r\n        text={t('team:foundation')}\r\n        disabled={false}\r\n        startType=\"text\"\r\n        type=\"text\"\r\n        isError={!!errors.foundationYear}\r\n        errorMessage={formAddTeamsErrors[errors.foundationYear?.type]}\r\n        name=\"foundationYear\"\r\n        onChange={() => trigger('foundationYear')}\r\n        defaultValue={teamUpdate ? teamUpdate.foundationYear : ''}\r\n        register={register({\r\n          required: true,\r\n          pattern: regExpYear,\r\n          validate: {\r\n            isNotYoung: (value) => validateYearFoundationYoung(value),\r\n            isNotOld: (value) => validateYearFoundationOld(value),\r\n          },\r\n        })}\r\n      />\r\n\r\n      <BtnGroup>\r\n        <ButtonAction\r\n          onClick={cancelAddNewEntity}\r\n          isNegativeStyle\r\n          isAdding={false}\r\n          size=\"middle\"\r\n          text={t('buttons:cancel')}\r\n          disabled={false}\r\n          type=\"button\"\r\n        />\r\n        <ButtonAction\r\n          isNegativeStyle={false}\r\n          isAdding={false}\r\n          size=\"middle\"\r\n          text={t('buttons:save')}\r\n          disabled={Object.keys(errors).length > 0}\r\n          type=\"submit\"\r\n        />\r\n      </BtnGroup>\r\n    </FormAdd>\r\n  );\r\n});\r\n\r\nconst FormAdd = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & label {\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\n\r\nconst BtnGroup = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-column-gap: 24px;\r\n  \r\n    & button > span {\r\n      font-size: 15px;\r\n    }\r\n  \r\n  @media(max-width: 445px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    & button {\r\n      flex-basis: 46%;\r\n      padding: 8px 30px;\r\n    }\r\n  }\r\n`;\r\n","export const validateYearFoundationYoung = (value: string) => {\r\n  const currentDateYear = (new Date().getFullYear());\r\n  const checkingNew = Number(value) <= currentDateYear;\r\n  return checkingNew;\r\n};\r\n\r\nexport const validateYearFoundationOld = (value: string): boolean => {\r\n  const oldMaxYear = 1900;\r\n  const checkingOld = oldMaxYear < Number(value);\r\n  return checkingOld;\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AddNewEntity } from './AddNewEntity';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport { loadNewImage } from '../../store/asyncActions/image';\r\nimport { useCustomActions } from '../../helpers/functions/useCustomActions';\r\nimport { addNewTeam, updateCurrentTeam } from '../../store/asyncActions/team';\r\nimport { imageLoadData } from '../../store/reducers/image';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { IFormAddTeam } from '../../helpers/interfaces/componentsInterfaces/StateAndEvents';\r\nimport { FormAddTeam } from './FormAddTeam';\r\n\r\nconst actionCreators = {\r\n  loadNewImage,\r\n  addNewTeam,\r\n  updateCurrentTeam,\r\n  addSrcImageExisting: imageLoadData.actions.addSrcImageExisting,\r\n};\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const { token, srcImage } = useSelector((state: StoreReducer) => (\r\n    {\r\n      token: state.authDataUser.authData.token,\r\n      srcImage: state.imageLoadData.srcImage,\r\n    }\r\n  ));\r\n  const teamUpdate = useSelector(({ teamsDataReducer }: StoreReducer) => (\r\n    id ? teamsDataReducer.entities[id] : undefined));\r\n  const {\r\n    addNewTeam: addTeam,\r\n    updateCurrentTeam: updateTeam,\r\n  } = useCustomActions(actionCreators);\r\n\r\n  const addNewEntity = useCallback(async (data: IFormAddTeam) => {\r\n    const team = {\r\n      ...data,\r\n      name: data.teamName,\r\n      foundationYear: Number(data.foundationYear),\r\n      imageUrl: srcImage,\r\n    };\r\n\r\n    if ('id' in team) {\r\n      const {\r\n        payload: isSuccesUpdate,\r\n      } = await updateTeam({ team: { ...team, id: Number(team.id) }, token });\r\n\r\n      if (isSuccesUpdate) {\r\n        history.replace(routePaths.teams);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const { payload: isSuccesAdd } = await addTeam({ team, token });\r\n    if (isSuccesAdd) {\r\n      history.push(routePaths.teams);\r\n    }\r\n  }, [srcImage]);\r\n\r\n  return (\r\n    <AddNewEntity\r\n      isTeam\r\n      imageEntity={teamUpdate ? teamUpdate.imageUrl : undefined}\r\n    >\r\n      <FormAddTeam teamUpdate={teamUpdate} addNewTeam={addNewEntity} />\r\n    </AddNewEntity>\r\n  );\r\n};\r\n"],"sourceRoot":""}