{"version":3,"sources":["api/api–°onstants/imageRequestError.ts","store/asyncActions/image.ts","api/image.ts","helpers/functions/parsePositionPlayer.ts","static/icons/add_photo.svg","uiComponents/ImageUpload.tsx","components/addComponents/AddNewEntity.tsx","helpers/constants/playerPositions.ts","static/icons/calendar.svg","uiComponents/CalendarField.tsx","helpers/functions/formatingDate.ts","components/addComponents/FormAddPlayer.tsx","helpers/functions/validateBirthDay.ts","components/addComponents/AddNewPlayer.tsx"],"names":["imageRequestErrors","400","401","500","502","loadNewImage","createAsyncThunk","imageData","a","dispatch","addEntityError","actions","addErrorMessage","errorMessage","url","body","file","token","post","result","imageLoadData","addSrcImageServer","srcImage","isCustomError","status","parsePositionPlayer","value","length","indexSpace","indexOf","valueArray","split","splice","join","actionCreators","clearSrcImage","addSrcImageExisting","ImageUpload","React","memo","defaultImage","useSelector","state","authDataUser","authData","useCustomActions","downloadImage","useEffect","InputLoad","onChange","target","files","fileImage","formData","FormData","set","type","accept","ImageContainer","imageSrc","AddHover","styled","input","div","addPhotoIcon","mobileVersionLayout","clearErrorMessage","AddNewEntity","isTeam","imageEntity","children","t","useTranslation","ContainerAdd","HeaderAdd","text","to","routePaths","teams","players","disabled","Separator","BodyAdd","Notification","theme","colors","white","mobliSizeCard","span","lightGrey","mobileSizeGridForm","positions","label","isLast","CalendarField","defaultValue","isError","register","trigger","useState","dateBirthDay","setBirthDay","InputContainer","htmlFor","TextInput","CustomInput","onKeyDown","keyCode","onFocus","name","ref","placeholder","TextInputError","lightestRed","lightestGrey","darkGrey","calendarIcon","TextSmall","middleGrey","formatDateForServer","date","itemsData","formatDateForForm","slice","FormAddPlayer","addNewPlayer","playerUpdate","position","setPosition","team","setTeam","teamsOptions","teamsForSelectPlayer","history","useHistory","useForm","handleSubmit","errors","cancelAddNewEntity","useCallback","replace","FormAdd","onSubmit","id","required","FieldInputData","startType","formAddPlayersErrors","pattern","regExpName","minLength","maxLength","MultiSelectEntities","targetPosition","isPlaceholder","isMulti","isForm","options","targetTeam","find","option","PlayerData","height","validate","isNotVeryHeight","isNotVeryLow","weight","isNotHeavy","isNotEasy","birthday","regExpBirthDay","isCorrectDate","isNaN","Date","getFullYear","isNotYoung","dateBirthday","acceptableDate","now","setFullYear","validateBirthDayYoung","isNotOld","validateBirthDayOld","number","BtnGroup","ButtonAction","onClick","isNegativeStyle","isAdding","size","Object","keys","form","updateSelectedPlayer","useParams","playersDataReducer","entities","undefined","addPlayer","updatePlayer","addNewEntity","data","player","Number","avatarUrl","payload","push"],"mappings":"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","file":"static/js/7.98f87d86.chunk.js","sourcesContent":["interface IErrors {\r\n  [key: number]: string;\r\n}\r\n\r\nexport const imageRequestErrors: IErrors = {\r\n  400: 'Image or format is not correct',\r\n  401: 'You are not logged in, log in',\r\n  500: 'Server error, please try again later',\r\n  502: 'Server error, please try again later',\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { saveImage } from '../../api/image';\r\nimport { IImageData } from '../../helpers/interfaces/requestInterfaces/Image';\r\nimport { imageLoadData } from '../reducers/image';\r\nimport { imageRequestErrors } from '../../api/api–°onstants/imageRequestError';\r\nimport { addEntityError } from '../reducers/addingError';\r\n\r\nexport const loadNewImage = createAsyncThunk('imageLoad',\r\n  async (imageData: IImageData, { dispatch }) => {\r\n    dispatch(addEntityError.actions.addErrorMessage({ errorMessage: '' }));\r\n    try {\r\n      const result = await saveImage('Image/SaveImage', imageData.file, imageData.token);\r\n      dispatch(imageLoadData.actions.addSrcImageServer({ srcImage: result }));\r\n    } catch (error) {\r\n      if (error.isCustomError) {\r\n        dispatch(addEntityError.actions.addErrorMessage({\r\n          errorMessage: imageRequestErrors[error.status],\r\n        }));\r\n      }\r\n    }\r\n  });\r\n","import { post } from './index';\r\n\r\nexport const saveImage = (url: string, body: FormData, token: string) => (\r\n  post<object>(url, body, token)\r\n);\r\n","export const parsePositionPlayer = (value: string): string => {\r\n  if (value.length >= 7) {\r\n    const indexSpace = value.indexOf('Forward');\r\n    const valueArray = value.split('');\r\n    valueArray.splice(indexSpace, 0, ' ');\r\n    value = valueArray.join('');\r\n  }\r\n  return value;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/add_photo.06bd5fc8.svg\";","import React, { FC, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport addPhotoIcon from '../static/icons/add_photo.svg';\r\nimport { mobileVersionLayout } from '../helpers/constants/mobileSize';\r\nimport { useCustomActions } from '../helpers/functions/useCustomActions';\r\nimport { imageLoadData } from '../store/reducers/image';\r\nimport { loadNewImage } from '../store/asyncActions/image';\r\nimport { StoreReducer } from '../helpers/interfaces/StoreReducer';\r\n\r\ninterface IProps {\r\n  defaultImage?: string | undefined;\r\n}\r\n\r\nconst actionCreators = {\r\n  loadNewImage,\r\n  clearSrcImage: imageLoadData.actions.clearSrcImage,\r\n  addSrcImageExisting: imageLoadData.actions.addSrcImageExisting,\r\n};\r\n\r\nexport const ImageUpload: FC<IProps> = React.memo(({\r\n  defaultImage,\r\n}) => {\r\n  const { token, srcImage } = useSelector((state: StoreReducer) => ({\r\n    token: state.authDataUser.authData.token,\r\n    srcImage: state.imageLoadData.srcImage,\r\n  }));\r\n\r\n  const {\r\n    clearSrcImage,\r\n    loadNewImage: downloadImage,\r\n    addSrcImageExisting,\r\n  } = useCustomActions(actionCreators);\r\n\r\n  useEffect(() => {\r\n    clearSrcImage();\r\n    if (defaultImage) {\r\n      addSrcImageExisting({ srcImage: defaultImage });\r\n    }\r\n  }, [defaultImage]);\r\n\r\n  const loadImage = (imageData: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (imageData.target.files) {\r\n      const fileImage = imageData.target.files[0];\r\n      const formData = new FormData();\r\n      formData.set('file', fileImage);\r\n      downloadImage({ file: formData, token });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <InputLoad onChange={loadImage} type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" />\r\n      <ImageContainer imageSrc={srcImage}>\r\n        <AddHover />\r\n      </ImageContainer>\r\n    </label>\r\n  );\r\n});\r\n\r\nconst InputLoad = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst AddHover = styled.div`\r\n  border-radius: 10px;\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(156, 156, 156, 0.5) url(${addPhotoIcon}) no-repeat center center;\r\n  background-size: 74px 75px;\r\n  transition: 1s ease;\r\n\r\n  &:hover {\r\n    background-color: rgba(48, 48, 48, 0.8);\r\n  }\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    background-size: 41px 40px;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div<{ imageSrc: string; }>`\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  width: 336px;\r\n  height: 261px;\r\n  position: relative;\r\n  background: ${({ imageSrc }) => `url(${imageSrc}) no-repeat center 6px`};\r\n  background-size: contain;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    width: 185px;\r\n    height: 144px;\r\n  }\r\n`;\r\n","import React, { FC, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TextLink } from '../../uiComponents/TextLink';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { ImageUpload } from '../../uiComponents/ImageUpload';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport { NotificationMessage } from '../../uiComponents/NotificationMessage';\r\nimport { addEntityError } from '../../store/reducers/addingError';\r\nimport { useCustomActions } from '../../helpers/functions/useCustomActions';\r\nimport { mobileSizeGridForm, mobliSizeCard } from '../../helpers/constants/mobileSize';\r\n\r\ninterface IProps {\r\n  isTeam: boolean;\r\n  imageEntity?: string | undefined;\r\n}\r\n\r\nconst actionCreators = {\r\n  clearErrorMessage: addEntityError.actions.clearErrorMessage,\r\n};\r\n\r\nexport const AddNewEntity: FC<IProps> = React.memo(({\r\n  isTeam,\r\n  imageEntity,\r\n  children,\r\n}) => {\r\n  const { clearErrorMessage } = useCustomActions(actionCreators);\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    clearErrorMessage();\r\n  }, []);\r\n\r\n  const { errorMessage } = useSelector((state: StoreReducer) => (\r\n    {\r\n      errorMessage: state.addEntityError.errorMessage,\r\n    }));\r\n\r\n  return (\r\n    <ContainerAdd>\r\n      <HeaderAdd>\r\n        <TextLink\r\n          text={isTeam ? t('team:teams') : t('player:players')}\r\n          to={isTeam ? routePaths.teams : routePaths.players}\r\n          disabled={false}\r\n        />\r\n        <Separator>/</Separator>\r\n        <TextLink text={isTeam ? t('team:addTeam') : t('player:addPlayer')} to=\"#\" disabled />\r\n      </HeaderAdd>\r\n      <BodyAdd>\r\n        <ImageUpload defaultImage={imageEntity} />\r\n        {children}\r\n        {errorMessage !== '' && <Notification><NotificationMessage text={errorMessage} /></Notification>}\r\n      </BodyAdd>\r\n    </ContainerAdd>\r\n  );\r\n});\r\n\r\nconst ContainerAdd = styled.div`\r\n  flex-grow: 0.5;\r\n  margin: 32px auto auto;\r\n  border-radius: 10px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    border-radius: 0;\r\n    flex-grow: 1;\r\n    margin: 16px auto auto;\r\n  }\r\n`;\r\n\r\nconst HeaderAdd = styled.div`\r\n  padding: 26px 0 19px 32px;\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    padding: 15px 0 15px 16px;\r\n  }\r\n`;\r\n\r\nconst Separator = styled.span`\r\n  color: ${({ theme }) => theme.colors.lightGrey};\r\n  margin: 0 4px;\r\n`;\r\n\r\nconst BodyAdd = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  padding: 48px 0 48px 73px;\r\n  position: relative;\r\n\r\n  & > label:nth-child(1) {\r\n    margin-right: 136px;\r\n    align-self: flex-start;\r\n  }\r\n\r\n  @media (max-width: ${mobileSizeGridForm}) {\r\n    flex-direction: column;\r\n    padding: 48px 73px;\r\n\r\n    & > label:nth-child(1) {\r\n      margin-right: 0;\r\n      align-self: center;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    padding: 48px 24px;\r\n\r\n    & > label:nth-child(1) {\r\n      margin-right: 0;\r\n      margin-bottom: 48px;\r\n      align-self: center;\r\n    }\r\n  }\r\n  \r\n  @media(max-width: 370px) {\r\n    padding: 48px 20px;\r\n  }\r\n`;\r\n\r\nconst Notification = styled.div`\r\n  position: fixed;\r\n  top: 80px;\r\n  right: 36px;\r\n  width: 470px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media (max-width: ${mobliSizeCard}) {\r\n    width: auto;\r\n    top: 60px;\r\n    right: 20%;\r\n    left: 20%;\r\n  }\r\n`;\r\n","export const positions = [\r\n  { value: 'CenterForward', label: 'Center Forward' },\r\n  { value: 'GuardForward', label: 'Guard Forward' },\r\n  { value: 'Forward', label: 'Forward' },\r\n  { value: 'Center', label: 'Center' },\r\n  { value: 'Guard', label: 'Guard', isLast: true },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/calendar.d61b1aeb.svg\";","import React, { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { mobileVersionLayout } from '../helpers/constants/mobileSize';\r\nimport { TextSmall } from './Typography';\r\nimport calendarIcon from '../static/icons/calendar.svg';\r\n\r\ninterface IProps {\r\n  register: (field: HTMLInputElement) => void;\r\n  trigger: (key: string) => void;\r\n  defaultValue?: string;\r\n  isError?: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport const CalendarField: FC<IProps> = React.memo(({\r\n  defaultValue,\r\n  isError = false,\r\n  errorMessage = '',\r\n  register,\r\n  trigger,\r\n}) => {\r\n  const [dateBirthDay, setBirthDay] = useState<string>(defaultValue || '');\r\n  const { t } = useTranslation();\r\n\r\n  const changeHandler = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (value.length === 2 || value.length === 5) {\r\n      value += '.';\r\n      setBirthDay(value);\r\n    } else if (value.length !== 11) {\r\n      setBirthDay(value);\r\n    }\r\n    trigger('birthday');\r\n  };\r\n\r\n  const resetHandler = ({ keyCode }: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (keyCode === 8) {\r\n      setBirthDay('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer htmlFor=\"birthday\">\r\n      <TextInput>{t('player:birthday')}</TextInput>\r\n      <CustomInput\r\n        onChange={changeHandler}\r\n        onKeyDown={resetHandler}\r\n        onFocus={() => trigger('birthday')}\r\n        name=\"birthday\"\r\n        type=\"text\"\r\n        isError={isError}\r\n        defaultValue={defaultValue}\r\n        ref={register}\r\n        value={dateBirthDay}\r\n        placeholder=\"dd.mm.yyyy\"\r\n      />\r\n      {isError && <TextInputError>{errorMessage}</TextInputError>}\r\n    </InputContainer>\r\n  );\r\n});\r\n\r\nconst InputContainer = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n  position: relative;\r\n  outline: none;\r\n`;\r\n\r\nconst CustomInput = styled.input<{ type: string, isError: boolean }>`\r\n  outline: none;\r\n  box-sizing: border-box;\r\n  border: ${({ isError, theme }) => (isError ? `1px solid ${theme.colors.lightestRed}` : `1px solid ${theme.colors.lightestGrey}`)};\r\n  border-radius: 4px;\r\n  padding: 7px 12px;\r\n  background-color: ${({ theme }) => theme.colors.lightestGrey};\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  color: ${({ theme }) => theme.colors.darkGrey};\r\n  background: ${({ theme }) => `${theme.colors.lightestGrey} url(${calendarIcon}) no-repeat right 14px center`};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.lightGrey};\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 5px #D9D9D9;\r\n    background-color: ${({ theme }) => theme.colors.lightestGrey};\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: auto;\r\n    background-color: ${({ theme }) => theme.colors.lightestGrey};\r\n    color: ${({ theme }) => theme.colors.lightGrey};\r\n  }\r\n\r\n  &::-webkit-calendar-picker-indicator {\r\n    display: none;\r\n  }\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    font-size: 15px;\r\n  }\r\n\r\n  @media(max-width: 360px) {\r\n    background-position: right 5px center;\r\n  }\r\n  \r\n`;\r\n\r\nconst TextInput = styled(TextSmall)`\r\n  color: ${({ theme }) => theme.colors.middleGrey};\r\n\r\n  @media(max-width: ${mobileVersionLayout}) {\r\n    font-size: 17px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n\r\nconst TextInputError = styled(TextSmall)`\r\n  color: ${({ theme }) => theme.colors.lightestRed};\r\n  font-size: 12px;\r\n  position: absolute;\r\n  bottom: -23px;\r\n`;\r\n","export const formatDateForServer = (date: string): string => {\r\n  const itemsData = date.split('.');\r\n  return `${itemsData[2]}-${itemsData[1]}-${itemsData[0]}`;\r\n};\r\n\r\nexport const formatDateForForm = (date: string): string => {\r\n  const itemsData = date.slice(0, 10).split('-');\r\n  return `${itemsData[2]}.${itemsData[1]}.${itemsData[0]}`;\r\n};\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { FieldInputData } from '../../uiComponents/FieldInputData';\r\nimport { ButtonAction } from '../../uiComponents/ButtonAction';\r\nimport { MultiSelectEntities } from '../../uiComponents/MultiSelectEntities';\r\nimport { positions } from '../../helpers/constants/playerPositions';\r\nimport { teamsForSelectPlayer } from '../../store/selectors/teamsSelector';\r\nimport { IPlayer, IPostionOption, ITeamOption } from '../../helpers/interfaces/storeInterfaces/Player';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { IFormAddPlayer } from '../../helpers/interfaces/componentsInterfaces/StateAndEvents';\r\nimport { regExpName, regExpBirthDay } from '../../helpers/constants/regularExp';\r\nimport { validateBirthDayOld, validateBirthDayYoung } from '../../helpers/functions/validateBirthDay';\r\nimport { formAddPlayersErrors } from '../../helpers/constants/formErrors';\r\nimport { CalendarField } from '../../uiComponents/CalendarField';\r\nimport { mobileSizeGridForm } from '../../helpers/constants/mobileSize';\r\nimport { formatDateForServer, formatDateForForm } from '../../helpers/functions/formatingDate';\r\nimport { parsePositionPlayer } from '../../helpers/functions/parsePositionPlayer';\r\n\r\ninterface IProps {\r\n  addNewPlayer: (data: IFormAddPlayer) => void;\r\n  playerUpdate: IPlayer | undefined;\r\n}\r\n\r\nexport const FormAddPlayer: FC<IProps> = React.memo(({\r\n  addNewPlayer,\r\n  playerUpdate,\r\n}) => {\r\n  const [position, setPosition] = useState<string>(() => (playerUpdate ? playerUpdate.position : ''));\r\n  const [team, setTeam] = useState<string>(() => (playerUpdate ? `${playerUpdate.team}` : ''));\r\n\r\n  const teamsOptions = useSelector(teamsForSelectPlayer);\r\n\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    trigger,\r\n  } = useForm();\r\n\r\n  const cancelAddNewEntity = useCallback(() => {\r\n    history.replace(routePaths.players);\r\n  }, []);\r\n\r\n  const changePosition = (targetPosition: IPostionOption) => {\r\n    if (targetPosition) {\r\n      delete errors.position;\r\n      setPosition(targetPosition.value);\r\n    } else {\r\n      errors.position = true;\r\n      setPosition('');\r\n    }\r\n  };\r\n\r\n  const changeTeam = (targetTeam: ITeamOption) => {\r\n    if (targetTeam) {\r\n      delete errors.team;\r\n      setTeam(targetTeam.value);\r\n    } else {\r\n      errors.team = true;\r\n      setTeam('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormAdd onSubmit={handleSubmit(addNewPlayer)}>\r\n      {playerUpdate && <input type=\"hidden\" name=\"id\" ref={register} value={playerUpdate.id} />}\r\n      <input type=\"hidden\" name=\"position\" ref={register({ required: true })} value={position} />\r\n      <input type=\"hidden\" name=\"team\" ref={register({ required: true })} value={team} />\r\n      <FieldInputData\r\n        text={t('player:name')}\r\n        disabled={false}\r\n        startType=\"text\"\r\n        type=\"text\"\r\n        isError={!!errors.name}\r\n        errorMessage={formAddPlayersErrors[errors.name?.type]}\r\n        name=\"name\"\r\n        onChange={() => trigger('name')}\r\n        defaultValue={playerUpdate && playerUpdate.name}\r\n        register={register({\r\n          required: true,\r\n          pattern: regExpName,\r\n          minLength: 3,\r\n          maxLength: 22,\r\n        })}\r\n      />\r\n      <MultiSelectEntities\r\n        onChange={changePosition}\r\n        text={t('player:position')}\r\n        isPlaceholder={t('player:select')}\r\n        isMulti={false}\r\n        isForm\r\n        isError={!!errors.position}\r\n        defaultValue={playerUpdate && {\r\n          value: parsePositionPlayer(playerUpdate.position),\r\n          label: parsePositionPlayer(playerUpdate.position),\r\n        }}\r\n        options={positions}\r\n      />\r\n      <MultiSelectEntities\r\n        onChange={changeTeam}\r\n        text={t('player:team')}\r\n        isPlaceholder={t('player:select')}\r\n        isMulti={false}\r\n        isForm\r\n        defaultValue={playerUpdate\r\n                && teamsOptions.find((option) => option.value === playerUpdate.team)}\r\n        isError={!!errors.team}\r\n        options={teamsOptions}\r\n      />\r\n      <PlayerData>\r\n        <FieldInputData\r\n          text={t('player:heightForm')}\r\n          disabled={false}\r\n          startType=\"text\"\r\n          type=\"text\"\r\n          isError={!!errors.height}\r\n          errorMessage={formAddPlayersErrors[errors.height?.type]}\r\n          name=\"height\"\r\n          onChange={() => trigger('height')}\r\n          defaultValue={playerUpdate && playerUpdate.height}\r\n          register={register({\r\n            required: true,\r\n            pattern: /^([^\\D_]{3})$/i,\r\n            validate: {\r\n              isNotVeryHeight: (value) => value < 250,\r\n              isNotVeryLow: (value) => value > 150,\r\n            },\r\n          })}\r\n        />\r\n        <FieldInputData\r\n          text={t('player:weightForm')}\r\n          disabled={false}\r\n          startType=\"text\"\r\n          type=\"text\"\r\n          isError={!!errors.weight}\r\n          errorMessage={formAddPlayersErrors[errors.weight?.type]}\r\n          name=\"weight\"\r\n          onChange={() => trigger('weight')}\r\n          defaultValue={playerUpdate && playerUpdate.weight}\r\n          register={register({\r\n            required: true,\r\n            pattern: /^([^\\D_]{2,3})$/i,\r\n            validate: {\r\n              isNotHeavy: (value) => value <= 200,\r\n              isNotEasy: (value) => value >= 50,\r\n            },\r\n          })}\r\n        />\r\n        <CalendarField\r\n          trigger={trigger}\r\n          isError={!!errors.birthday}\r\n          errorMessage={formAddPlayersErrors[errors.birthday?.type]}\r\n          defaultValue={playerUpdate && formatDateForForm(playerUpdate.birthday)}\r\n          register={register({\r\n            required: true,\r\n            pattern: regExpBirthDay,\r\n            validate: {\r\n              isCorrectDate: (value) => !isNaN(new Date(formatDateForServer(value)).getFullYear()),\r\n              isNotYoung: (value) => validateBirthDayYoung(formatDateForServer(value)),\r\n              isNotOld: (value) => validateBirthDayOld(formatDateForServer(value)),\r\n            },\r\n          })}\r\n        />\r\n        <FieldInputData\r\n          text={t('player:number')}\r\n          disabled={false}\r\n          startType=\"text\"\r\n          type=\"text\"\r\n          isError={!!errors.number}\r\n          errorMessage={formAddPlayersErrors[errors.number?.type]}\r\n          name=\"number\"\r\n          onChange={() => trigger('number')}\r\n          defaultValue={playerUpdate && playerUpdate.number}\r\n          register={register({ required: true, pattern: /^([^\\D_]{1,2})$/i })}\r\n        />\r\n      </PlayerData>\r\n      <BtnGroup>\r\n        <ButtonAction\r\n          onClick={cancelAddNewEntity}\r\n          isNegativeStyle\r\n          isAdding={false}\r\n          size=\"middle\"\r\n          text={t('buttons:cancel')}\r\n          disabled={false}\r\n          type=\"button\"\r\n        />\r\n        <ButtonAction\r\n          isNegativeStyle={false}\r\n          isAdding={false}\r\n          size=\"middle\"\r\n          text={t('buttons:save')}\r\n          disabled={Object.keys(errors).length > 0}\r\n          type=\"submit\"\r\n        />\r\n      </BtnGroup>\r\n    </FormAdd>\r\n  );\r\n});\r\n\r\nconst FormAdd = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & label {\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\n\r\nconst BtnGroup = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-column-gap: 24px;\r\n\r\n  & button > span {\r\n    font-size: 15px;\r\n  }\r\n\r\n  @media (max-width: 485px) {\r\n    grid-template-columns: 41vw 41vw;\r\n    grid-column-gap: 33px;\r\n  }\r\n\r\n  @media (max-width: 445px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    & button {\r\n      flex-basis: 44%;\r\n      padding: 8px 30px;\r\n    }\r\n  }\r\n  @media (max-width: 320px) {\r\n    & button {\r\n      flex-basis: 42%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PlayerData = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-column-gap: 24px;\r\n\r\n  @media ( max-width: 1500px) {\r\n    grid-template-columns: repeat(2, 171px) ;\r\n  }\r\n\r\n  @media (max-width: ${mobileSizeGridForm}) {\r\n    grid-template-columns: auto auto;\r\n  }\r\n  @media (max-width: 485px) {\r\n    grid-template-columns: 41vw 41vw;\r\n    grid-column-gap: 33px;\r\n  }\r\n  @media (max-width: 445px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    & > label {\r\n      width: 44%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    & > label {\r\n      width: 42%;\r\n    }\r\n  }\r\n\r\n`;\r\n","export const validateBirthDayYoung = (value: string): boolean => {\r\n  const dateBirthday = new Date(value);\r\n  const acceptableDate = new Date(Date.now());\r\n  acceptableDate.setFullYear(acceptableDate.getFullYear() - 18);\r\n  const checkingYoung = dateBirthday < acceptableDate;\r\n  return checkingYoung;\r\n};\r\n\r\nexport const validateBirthDayOld = (value: string): boolean => {\r\n  const dateBirthday = new Date(value);\r\n  const checkingOld = new Date('1950-01-01') < dateBirthday;\r\n  return checkingOld;\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AddNewEntity } from './AddNewEntity';\r\nimport { loadNewImage } from '../../store/asyncActions/image';\r\nimport { useCustomActions } from '../../helpers/functions/useCustomActions';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport { addNewPlayer, updateSelectedPlayer } from '../../store/asyncActions/player';\r\nimport { imageLoadData } from '../../store/reducers/image';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\nimport { IFormAddPlayer } from '../../helpers/interfaces/componentsInterfaces/StateAndEvents';\r\nimport { FormAddPlayer } from './FormAddPlayer';\r\nimport { formatDateForServer } from '../../helpers/functions/formatingDate';\r\n\r\nconst actionCreators = {\r\n  loadNewImage,\r\n  addNewPlayer,\r\n  updateSelectedPlayer,\r\n  addSrcImageExisting: imageLoadData.actions.addSrcImageExisting,\r\n};\r\n\r\nexport default () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n  const playerUpdate = useSelector(({ playersDataReducer }: StoreReducer) => (\r\n    id ? playersDataReducer.entities[id] : undefined));\r\n\r\n  const { token, srcImage } = useSelector((state: StoreReducer) => (\r\n    {\r\n      token: state.authDataUser.authData.token,\r\n      srcImage: state.imageLoadData.srcImage,\r\n    }\r\n  ));\r\n  const {\r\n    addNewPlayer: addPlayer,\r\n    updateSelectedPlayer: updatePlayer,\r\n  } = useCustomActions(actionCreators);\r\n\r\n  const addNewEntity = useCallback(async (data: IFormAddPlayer) => {\r\n    const player = {\r\n      ...data,\r\n      birthday: formatDateForServer(data.birthday),\r\n      team: Number(data.team),\r\n      number: Number(data.number),\r\n      weight: Number(data.weight),\r\n      height: Number(data.height),\r\n      avatarUrl: srcImage,\r\n    };\r\n\r\n    if ('id' in player) {\r\n      const {\r\n        payload: isSuccessUpdate,\r\n      } = await updatePlayer({\r\n        player: {\r\n          ...player,\r\n          id: Number(player.id),\r\n        },\r\n        token,\r\n      });\r\n\r\n      if (isSuccessUpdate) {\r\n        history.replace(routePaths.players);\r\n      }\r\n      return;\r\n    }\r\n    const {\r\n      payload: isSuccessAdding,\r\n    } = await addPlayer({ player, token });\r\n    if (isSuccessAdding) {\r\n      history.push(routePaths.players);\r\n    }\r\n  }, [srcImage]);\r\n\r\n  return (\r\n    <AddNewEntity\r\n      isTeam={false}\r\n      imageEntity={playerUpdate ? playerUpdate.avatarUrl : undefined}\r\n    >\r\n      <FormAddPlayer playerUpdate={playerUpdate} addNewPlayer={addNewEntity} />\r\n    </AddNewEntity>\r\n  );\r\n};\r\n"],"sourceRoot":""}