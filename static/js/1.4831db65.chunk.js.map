{"version":3,"sources":["static/images/item_not_image.png","store/selectors/teamsSelector.ts","store/selectors/playersSelector.ts","components/cardComponents/CardItemConstructor.tsx","components/listComponents/ListBase.tsx","static/images/empty_teams.svg","static/images/empty_players.svg","components/EmptyEntityComponent.tsx","static/icons/search.svg","uiComponents/FieldSearch.tsx","uiComponents/PaginationCountBtn.tsx","uiComponents/SelectCounts.tsx","components/listComponents/SearchNotFound.tsx","components/listComponents/EntitiesMarkUp.tsx","uiComponents/MultiSelectEntities.tsx","helpers/functions/buildStylesSelect.ts","themes/reactPagination.module.scss"],"names":["selectState","state","teamsChunkSelector","createSelector","chunkData","teamsDataReducer","chunkEntities","data","countEntities","count","sizePageEntities","size","allTeamsSelector","ids","entities","map","id","teamsForSelectPlayer","teams","team","index","teamOption","value","label","name","imageSrc","imageUrl","isLast","length","regExpImageTeam","test","imageUnknow","allPlayersSelector","playersDataReducer","playersChunkSelector","playersCurrentTeam","idTeam","Number","filter","entity","CardItemConstructor","React","memo","type","item","history","useHistory","teamName","useSelector","undefined","typeItemUrl","avatarUrl","actualImage","ContainerCard","onClick","push","routePaths","players","BodyCard","LogoItem","FooterCard","DataItem","Name","NumberPlayer","number","DescriptionItem","foundationYear","styled","div","cardSizes","theme","sizes","gradient","base","sizeMobile","extraSmallLayout","colors","darkGrey","TextStandart","white","lightRed","TextSmallThin","grey","ListBase","ListContainer","mobileVersionList","EmptyEntity","isTeam","t","useTranslation","showFormAdd","useCallback","teamAdd","playerAdd","ContainerEntity","ImageEmpty","LabelEmpty","TextEntity","ButtonAction","isNegativeStyle","isAdding","text","disabled","mobileVersionLayout","TextLabel","lightestRed","teamsEmpty","playersEmpty","TextLarge","middleGrey","FieldSearch","onChange","CustomSearch","placeholder","input","lightGrey","search","PaginationCountBtn","PaginationBtn","TextPagination","Arrow","button","lightestGrey","red","mobileLayout","counts","customStyles","dropdownIndicator","styles","isFocused","transition","transform","padding","indicatorsContainer","alignItems","paddingTop","indicatorSeparator","marginBottom","marginTop","option","fontStyle","fontWeight","fontSize","lineHeight","color","backgroundColor","darkRed","singleValue","left","top","control","borderColor","boxShadow","width","height","minHeight","cursor","menu","position","borderRadius","menuList","valueContainer","SelectCounts","isSearchable","isMulti","isClearable","defaultValue","options","SearchNotFound","ConteinerNotFound","ContainerText","TextNotFound","TextExtraLarge","actionCreator","loadChunkTeams","loadChunkPlayers","EntitiesMarkUp","typedSelectedChunk","typedSelectedAll","teamsOptions","token","authDataUser","authData","useCustomActions","loadNewChunkTeams","loadNewChunkPlayers","loadNewChunk","useState","page","setChunkData","useEffect","showAddNewEntityForm","ContainerTeams","HeaderTeams","FieldGroup","debounce","target","newNameChunk","MultiSelectEntities","isPlaceholder","isForm","newCommandsChunk","TeamsBody","TeamsFooter","previousLabel","nextLabel","breakLabel","pageClassName","style","itemPagination","pageLinkClassName","itemLinkPagination","containerClassName","paginationContainer","activeClassName","onPageChange","newPageChunk","selected","initialPage","pageCount","pageRangeDisplayed","marginPagesDisplayed","newSizeChunk","isError","SelectLabel","clearIndicator","selectProps","maxHeight","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","wordBreak","borderBottom","multiValue","paddingLeft","marginLeft","whiteSpace","multiValueLabel","scrollbarColor","scrollbarWidth","overflow","TextError","TextSmall","props","TextExtraSmall","module","exports"],"mappings":"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","file":"static/js/1.4831db65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/item_not_image.7ddbd5cf.png\";","import { createSelector } from '@reduxjs/toolkit';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport imageUnknow from '../../static/images/item_not_image.png';\r\nimport { regExpImageTeam } from '../../helpers/constants/regularExp';\r\nimport { ITeam } from '../../helpers/interfaces/storeInterfaces/Team';\r\n\r\nconst selectState = (state: StoreReducer) => state;\r\n\r\nexport const teamsChunkSelector = createSelector(\r\n  selectState,\r\n  ({ teamsDataReducer: { chunkData } }) => ({\r\n    chunkEntities: chunkData.data,\r\n    countEntities: chunkData.count,\r\n    sizePageEntities: chunkData.size,\r\n  }),\r\n);\r\n\r\nexport const allTeamsSelector = createSelector(\r\n  selectState,\r\n  ({ teamsDataReducer: { ids, entities } }) => ids.map((id) => <ITeam>entities[id]),\r\n);\r\n\r\nexport const teamsForSelectPlayer = createSelector(\r\n  allTeamsSelector,\r\n  (teams: ITeam[]) => teams.map((team, index) => {\r\n    const teamOption = {\r\n      value: team.id,\r\n      label: team.name,\r\n      imageSrc: team.imageUrl,\r\n      isLast: (index + 1) === teams.length,\r\n    };\r\n\r\n    if (!regExpImageTeam.test(team.imageUrl)) {\r\n      teamOption.imageSrc = imageUnknow;\r\n    }\r\n    return teamOption;\r\n  }),\r\n);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\n\r\nconst selectState = (state: StoreReducer) => state;\r\n\r\nexport const allPlayersSelector = createSelector(\r\n  selectState,\r\n  (({ playersDataReducer: { ids, entities } }) => ids.map((id) => entities[id]!)),\r\n);\r\n\r\nexport const playersChunkSelector = createSelector(\r\n  selectState,\r\n  ({ playersDataReducer: { chunkData } }) => ({\r\n    chunkEntities: chunkData.data,\r\n    countEntities: chunkData.count,\r\n    sizePageEntities: chunkData.size,\r\n  }),\r\n);\r\n\r\nconst selectPlayersTeam = (state: StoreReducer, idTeam: string) => ({\r\n  state,\r\n  idTeam: Number(idTeam),\r\n});\r\n\r\nexport const playersCurrentTeam = createSelector(\r\n  selectPlayersTeam,\r\n  ({\r\n    state: {\r\n      playersDataReducer: {\r\n        ids,\r\n        entities,\r\n      },\r\n    },\r\n    idTeam,\r\n  }) => (\r\n    ids.map((id) => entities[id]!).filter((entity) => entity?.team === idTeam)\r\n  ),\r\n);\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextSmallThin, TextStandart } from '../../uiComponents/Typography';\r\nimport { sizeMobile, extraSmallLayout } from '../../helpers/constants/mobileSize';\r\nimport { ITeam } from '../../helpers/interfaces/storeInterfaces/Team';\r\nimport { IPlayer } from '../../helpers/interfaces/storeInterfaces/Player';\r\nimport { TypeItem } from '../../helpers/types/types';\r\nimport imageUnknow from '../../static/images/item_not_image.png';\r\nimport { regExpImageTeam } from '../../helpers/constants/regularExp';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\n\r\ninterface IProps {\r\n  type: TypeItem,\r\n  item: IPlayer | ITeam;\r\n}\r\n\r\nexport const CardItemConstructor: FC<IProps> = React.memo(({ type, item }) => {\r\n  const history = useHistory();\r\n\r\n  const idTeam = type === 'player' && 'team' in item ? item.team : item.id;\r\n\r\n  const teamName = useSelector(({\r\n    teamsDataReducer: { entities },\r\n  }: StoreReducer) => (idTeam ? entities[idTeam]?.name : undefined));\r\n\r\n  const showItemCard = () => {\r\n    if (type === 'team') {\r\n      history.push(`${routePaths.teams}/${item.id}`);\r\n    } else {\r\n      history.push(`${routePaths.players}/${item.id}`);\r\n    }\r\n  };\r\n\r\n  const typeItemUrl = 'avatarUrl' in item ? item.avatarUrl : item.imageUrl;\r\n  const actualImage = !regExpImageTeam.test(typeItemUrl) ? imageUnknow : typeItemUrl;\r\n  return (\r\n    <ContainerCard onClick={showItemCard}>\r\n      <BodyCard type={type}>\r\n        <LogoItem type={type} imageUrl={actualImage} />\r\n      </BodyCard>\r\n      <FooterCard>\r\n        <DataItem>\r\n          <Name type={type}>\r\n            {(type === 'team' && teamName) || item.name}\r\n            {'number' in item && <NumberPlayer>{` #${item.number}`}</NumberPlayer>}\r\n          </Name>\r\n          <DescriptionItem>\r\n            {'foundationYear' in item && `Year of foundation: ${item.foundationYear}`}\r\n            {(type === 'player' && teamName) && `${teamName}`}\r\n          </DescriptionItem>\r\n        </DataItem>\r\n      </FooterCard>\r\n    </ContainerCard>\r\n  );\r\n});\r\n\r\nconst ContainerCard = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst BodyCard = styled.div<{ type: string }>`\r\n  padding: ${({ type, theme: { sizes: { cardSizes } } }) => (cardSizes[type] ? cardSizes[type] : '65px 107px')};\r\n  background: ${({ theme }) => theme.gradient.base};\r\n  text-align: center;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n\r\n  @media (max-width: ${sizeMobile}) {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: ${({\r\n    type,\r\n    theme: { sizes: { cardSizes } },\r\n  }) => (cardSizes[type] ? cardSizes[`${type}Mobile`] : '24px 0 30px 0')};\r\n  }\r\n`;\r\n\r\nconst LogoItem = styled.div<{ type: string, imageUrl: string }>`\r\n  width: ${({ type }) => (type === 'team' ? '150px' : '274px')};\r\n  height: ${({ type }) => (type === 'team' ? '150px' : '207px')};\r\n\r\n  background: ${({ imageUrl }) => `url(${imageUrl}) no-repeat`};\r\n  background-size: contain;\r\n  background-position: center;\r\n\r\n  @media (max-width: ${sizeMobile}) {\r\n    width: ${({ type }) => (type === 'team' ? '58px' : '121px')};\r\n    height: ${({ type }) => (type === 'team' ? '51px' : '93px')};\r\n    background-position: ${({ type }) => (type === 'team' ? 'center' : 'bottom')};\r\n  }\r\n\r\n  @media (max-width: ${extraSmallLayout}) {\r\n    height: ${({ type }) => (type === 'team' ? '51px' : '79px')};\r\n  }\r\n\r\n`;\r\n\r\nconst FooterCard = styled.div`\r\n  padding: 21px 0 24px;\r\n  background-color: ${({ theme }) => theme.colors.darkGrey};\r\n  border-bottom-left-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n  flex-grow: 1;\r\n  \r\n  @media (max-width: ${sizeMobile}) {\r\n    padding: 0;\r\n    align-items: center;\r\n    min-height: 94px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst DataItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  text-align: center;\r\n  padding: 0 15px;\r\n`;\r\n\r\nconst Name = styled(TextStandart)<{ type: string }>`\r\n  display: block;\r\n  margin-bottom: 12px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  align-self: center;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  word-break: break-word;\r\n  \r\n  @media (max-width: ${sizeMobile}) {\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\n\r\nconst NumberPlayer = styled(TextStandart)`\r\n  color: ${({ theme }) => theme.colors.lightRed};\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  \r\n  @media (max-width: ${sizeMobile}) {\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nconst DescriptionItem = styled(TextSmallThin)`\r\n  color: ${({ theme }) => theme.colors.grey};\r\n  word-break: break-word;\r\n  \r\n  @media (max-width: ${sizeMobile}) {\r\n    font-size: 13px;\r\n    line-height: 18px;\r\n  }\r\n  @media(max-width: ${extraSmallLayout}) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CardItemConstructor } from '../cardComponents/CardItemConstructor';\r\nimport { TypeItem } from '../../helpers/types/types';\r\nimport {\r\n  mobileVersionList, sizeMobile, extraSmallLayout,\r\n} from '../../helpers/constants/mobileSize';\r\nimport { IPlayer } from '../../helpers/interfaces/storeInterfaces/Player';\r\nimport { ITeam } from '../../helpers/interfaces/storeInterfaces/Team';\r\n\r\ninterface IProps {\r\n  entities: (ITeam | IPlayer)[],\r\n  type: TypeItem,\r\n}\r\n\r\nexport const ListBase: FC<IProps> = React.memo(({\r\n  entities,\r\n  type,\r\n}) => (\r\n  <ListContainer>\r\n    {entities.map((entity: ITeam | IPlayer) => (\r\n      <CardItemConstructor\r\n        key={entity.id}\r\n        type={type}\r\n        item={entity}\r\n      />\r\n    ))}\r\n  </ListContainer>\r\n));\r\n\r\nconst ListContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 24px;\r\n  grid-row-gap: 24px;\r\n  \r\n  @media (max-width: ${mobileVersionList}) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 24px;\r\n    grid-row-gap: 24px;\r\n  }\r\n\r\n  @media (max-width: ${sizeMobile}) {\r\n    grid-template-columns: 180px 180px 180px;\r\n    grid-column-gap: 24px;\r\n    grid-row-gap: 24px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: 180px 180px 180px;\r\n    grid-column-gap: 12px;\r\n    grid-row-gap: 12px;\r\n  }\r\n  \r\n  @media(max-width: 575px) {\r\n    grid-template-columns: 170px 170px 170px;\r\n  }\r\n  \r\n  @media (max-width: 542px) {\r\n    grid-template-columns: 180px 180px;\r\n  }\r\n\r\n  @media (max-width: 385px) {\r\n    grid-template-columns: 170px 170px;\r\n  }\r\n\r\n  @media (max-width: ${extraSmallLayout}) {\r\n    grid-template-columns: 150px 150px;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/empty_teams.c32f6cd2.svg\";","export default __webpack_public_path__ + \"static/media/empty_players.dd8744b1.svg\";","import React, { FC, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextLabel, TextLarge } from '../uiComponents/Typography';\r\nimport { ButtonAction } from '../uiComponents/ButtonAction';\r\nimport teamsEmpty from '../static/images/empty_teams.svg';\r\nimport playersEmpty from '../static/images/empty_players.svg';\r\nimport { mobileVersionLayout } from '../helpers/constants/mobileSize';\r\nimport { routePaths } from '../helpers/constants/routePaths';\r\n\r\ninterface IProps {\r\n  isTeam: boolean;\r\n}\r\n\r\nexport const EmptyEntity: FC<IProps> = React.memo(({\r\n  isTeam,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const showFormAdd = useCallback(() => {\r\n    history.push(isTeam ? routePaths.teamAdd : routePaths.playerAdd);\r\n  }, []);\r\n\r\n  return (\r\n    <ContainerEntity>\r\n      <ImageEmpty isTeam={isTeam} />\r\n      <LabelEmpty>{t('emptyEntity:label')}</LabelEmpty>\r\n      <TextEntity>{isTeam ? t('emptyEntity:emptyTeam') : t('emptyEntity:emptyPlayer')}</TextEntity>\r\n      <ButtonAction\r\n        onClick={showFormAdd}\r\n        isNegativeStyle={false}\r\n        isAdding\r\n        size=\"large\"\r\n        text=\"Add\"\r\n        disabled={false}\r\n        type=\"button\"\r\n      />\r\n    </ContainerEntity>\r\n  );\r\n});\r\n\r\nconst ContainerEntity = styled.div`\r\n  border-radius: 15px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 79px 90px 48px;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    border-radius: 0;\r\n    flex-grow: 1;\r\n    padding: 79px 0 48px;\r\n  }\r\n  @media(max-width: 350px) {\r\n    & button {\r\n      padding: 10px 110px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LabelEmpty = styled(TextLabel)`\r\n  color: ${({ theme }) => theme.colors.lightestRed};\r\n  font-weight: 800;\r\n  margin-top: 77px;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    font-size: 17px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n\r\nconst ImageEmpty = styled.div<{ isTeam: boolean }>`\r\n  width: ${({ isTeam }) => (isTeam ? '381px' : '320px')};\r\n  height: ${({ isTeam }) => (isTeam ? '260px' : '320px')};\r\n  background: ${({ isTeam }) => (isTeam ? `url(${teamsEmpty}) no-repeat` : `url(${playersEmpty}) no-repeat`)};\r\n  background-size: contain;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    width: ${({ isTeam }) => (isTeam ? '339px' : '225px')};\r\n    height: 226px;\r\n  }\r\n  @media(max-width: 350px) {\r\n    width: ${({ isTeam }) => (isTeam && '280px')};\r\n    height:  ${({ isTeam }) => (isTeam && '200px')};\r\n  }\r\n`;\r\n\r\nconst TextEntity = styled(TextLarge)`\r\n  color: ${({ theme }) => theme.colors.middleGrey};\r\n  font-weight: normal;\r\n  margin: 24px 0 48px 0;\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search.84e81ee8.svg\";","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport search from '../static/icons/search.svg';\r\nimport { sizeMobile } from '../helpers/constants/mobileSize';\r\n\r\ninterface IProps {\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const FieldSearch: FC<IProps> = React.memo(({\r\n  onChange,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div>\r\n      <CustomSearch onChange={onChange} type=\"text\" placeholder={t('markup:search')} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst CustomSearch = styled.input`\r\n  outline: none;\r\n  cursor: pointer;\r\n  margin: 0;\r\n  border: ${({ theme }) => `1px solid ${theme.colors.lightGrey}`};\r\n  border-radius: 4px;\r\n  padding: 7px 12px;\r\n  background: ${({ theme }) => theme.colors.white} url(${search}) no-repeat right 18px center;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n\r\n  &::placeholder {\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 24px;\r\n    color: ${({ theme }) => theme.colors.middleGrey};\r\n  }\r\n\r\n  @media (max-width: ${sizeMobile}) {\r\n    padding: 7px 12px;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TextStandart } from './Typography';\r\nimport { PagginationBtn } from '../helpers/types/types';\r\nimport { mobileLayout } from '../helpers/constants/mobileSize';\r\n\r\ninterface IProps {\r\n  type: PagginationBtn;\r\n}\r\n\r\nexport const PaginationCountBtn: FC<IProps> = React.memo(({ type }) => (\r\n  <PaginationBtn>\r\n    <TextPagination type={type}>{type === 'break' ? '...' : <Arrow type={type} />}</TextPagination>\r\n  </PaginationBtn>\r\n));\r\n\r\nconst Arrow = styled.div<{ type: string }>`\r\n  border: 2px solid grey;\r\n  border-top: none;\r\n  border-right: none;\r\n  width: 6px;\r\n  height: 6px;\r\n  transform: rotate(${({ type }) => (type === 'prev' ? '45deg' : '225deg')});\r\n`;\r\n\r\nconst PaginationBtn = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: ${({ theme }) => theme.colors.lightestGrey};\r\n  color: ${({ theme }) => theme.colors.middleGrey};\r\n\r\n  &:active {\r\n    background-color: ${({ theme }) => theme.colors.red};\r\n    color: ${({ theme }) => theme.colors.white};\r\n\r\n    & ${Arrow} {\r\n      border-color: ${({ theme }) => theme.colors.white};\r\n    }\r\n  }\r\n  \r\n  @media(max-width: ${mobileLayout}) {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst TextPagination = styled(TextStandart)<{ type: string }>`\r\n  font-weight: 700;\r\n  font-size: 19px;\r\n  letter-spacing: 2px;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport Select from 'react-select';\r\nimport { theme } from '../themes/theme';\r\n\r\nconst counts = [\r\n  { value: '6', label: '6' },\r\n  { value: '12', label: '12' },\r\n  { value: '24', label: '24' },\r\n];\r\n\r\nconst customStyles = {\r\n  dropdownIndicator: (styles: any, { isFocused }: any) => ({\r\n    ...styles,\r\n    transition: '0.5s ease',\r\n    transform: isFocused && 'rotate(180deg)',\r\n    '@media(max-width: 615px)': {\r\n      padding: '2px',\r\n    },\r\n  }),\r\n  indicatorsContainer: (styles: any) => ({\r\n    ...styles,\r\n    alignItems: 'flex-start',\r\n    paddingTop: '2px',\r\n  }),\r\n  indicatorSeparator: (styles: any) => ({\r\n    ...styles,\r\n    '@media(max-width: 615px)': {\r\n      marginBottom: '5px',\r\n      marginTop: '5px',\r\n    },\r\n  }),\r\n  option: (styles: any, state: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: '500',\r\n    fontSize: '18px',\r\n    lineHeight: '25px',\r\n    color: state.isFocused ? theme.colors.white : theme.colors.grey,\r\n    backgroundColor: (state.isFocused && theme.colors.lightestRed),\r\n    ':active': {\r\n      backgroundColor: theme.colors.darkRed,\r\n    },\r\n    '@media(max-width: 615px)': {\r\n      fontSize: '12px',\r\n      lineHeight: '150%',\r\n    },\r\n  }),\r\n  singleValue: (styles: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: '500',\r\n    fontSize: '18px',\r\n    lineHeight: '25px',\r\n    color: theme.colors.darkGrey,\r\n    left: '38%',\r\n    '@media(max-width: 615px)': {\r\n      top: '55%',\r\n      fontSize: '12px',\r\n      lineHeight: '150%',\r\n    },\r\n  }),\r\n  control: (styles: any) => ({\r\n    ...styles,\r\n    backgroundColor: theme.colors.white,\r\n    borderColor: theme.colors.lightGrey,\r\n    boxShadow: 'none',\r\n    width: '90px',\r\n    height: '40px',\r\n    '@media(max-width: 615px)': {\r\n      width: '60px',\r\n      height: '28px',\r\n      minHeight: '28px',\r\n    },\r\n    ':hover': {\r\n      cursor: 'pointer',\r\n      borderColor: theme.colors.lightGrey,\r\n    },\r\n  }),\r\n  menu: (styles: any) => ({\r\n    ...styles,\r\n    position: 'absolute',\r\n    top: '-150px',\r\n    borderRadius: '4px',\r\n    '@media(max-width: 615px)': {\r\n      top: '-125px',\r\n    },\r\n  }),\r\n  menuList: (styles: any) => ({\r\n    ...styles,\r\n    padding: '0',\r\n  }),\r\n  valueContainer: (styles: any) => ({\r\n    ...styles,\r\n    '@media(max-width: 615px)': {\r\n      padding: '0',\r\n    },\r\n  }),\r\n};\r\n\r\ninterface IProps {\r\n  onChange: (e: any) => void;\r\n}\r\n\r\nexport const SelectCounts: FC<IProps> = React.memo(({\r\n  onChange,\r\n}) => (\r\n  <Select\r\n    isSearchable={false}\r\n    isMulti={false}\r\n    isClearable={false}\r\n    styles={customStyles}\r\n    defaultValue={counts[0]}\r\n    options={counts}\r\n    placeholder={false}\r\n    onChange={onChange}\r\n  />\r\n));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TextExtraLarge } from '../../uiComponents/Typography';\r\nimport {\r\n  mobileVersionList, mobileVersionLayout, sizeMobile, extraSmallLayout,\r\n} from '../../helpers/constants/mobileSize';\r\n\r\nexport const SearchNotFound = () => (\r\n  <ConteinerNotFound>\r\n    <ContainerText>\r\n      <TextNotFound>No such element is found, create it</TextNotFound>\r\n    </ContainerText>\r\n  </ConteinerNotFound>\r\n);\r\n\r\nconst ConteinerNotFound = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 380px);\r\n  grid-template-rows: repeat(2, 300px);\r\n\r\n\r\n  @media (max-width: ${mobileVersionList}) {\r\n    grid-template-columns: repeat(2, 376px);\r\n  }\r\n\r\n  @media (max-width: ${sizeMobile}) {\r\n    grid-template-columns: 180px 180px 180px;\r\n    grid-column-gap: 24px;\r\n    grid-row-gap: 24px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: 180px 180px 180px;\r\n    grid-column-gap: 12px;\r\n    grid-row-gap: 12px;\r\n  }\r\n\r\n  @media(max-width: 575px) {\r\n    grid-template-columns: 170px 170px 170px;\r\n  }\r\n\r\n  @media (max-width: 542px) {\r\n    grid-template-columns: 180px 180px;\r\n  }\r\n\r\n  @media (max-width: 385px) {\r\n    grid-template-columns: 170px 170px;\r\n  }\r\n\r\n  @media (max-width: ${extraSmallLayout}) {\r\n    grid-template-columns: 150px 150px;\r\n  }\r\n`;\r\n\r\nconst ContainerText = styled.div`\r\n  grid-column-start: 1;\r\n  grid-column-end: -1;\r\n  grid-row-start: 1;\r\n  grid-row-end: -1;\r\n  display: flex;\r\n`;\r\n\r\nconst TextNotFound = styled(TextExtraLarge)`\r\n  margin: auto;\r\n  font-size: 65px;\r\n  color: ${({ theme }) => theme.colors.grey};\r\n\r\n  @media (max-width: 1390px) {\r\n    font-size: 58px;\r\n  }\r\n\r\n\r\n  @media (max-width: ${mobileVersionList}) {\r\n    font-size: 45px;\r\n  }\r\n\r\n\r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    text-align: center;\r\n    line-height: 130px;\r\n  }\r\n\r\n  @media (max-width: 860px) {\r\n    font-size: 35px;\r\n  }\r\n`;\r\n","import React, {\r\n  useEffect, useState, FC, useCallback,\r\n} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { debounce } from 'lodash';\r\nimport { teamsChunkSelector, teamsForSelectPlayer, allTeamsSelector } from '../../store/selectors/teamsSelector';\r\nimport { playersChunkSelector, allPlayersSelector } from '../../store/selectors/playersSelector';\r\nimport { ListBase } from './ListBase';\r\nimport { EmptyEntity } from '../EmptyEntityComponent';\r\nimport { FieldSearch } from '../../uiComponents/FieldSearch';\r\nimport { ButtonAction } from '../../uiComponents/ButtonAction';\r\nimport { PaginationCountBtn } from '../../uiComponents/PaginationCountBtn';\r\nimport { SelectCounts } from '../../uiComponents/SelectCounts';\r\nimport { loadChunkTeams } from '../../store/asyncActions/team';\r\nimport { loadChunkPlayers } from '../../store/asyncActions/player';\r\nimport { StoreReducer } from '../../helpers/interfaces/StoreReducer';\r\nimport {\r\n  IStateChangeEntities, IOption, IPaginationValue, IDataSelected, ISelectedDataAll,\r\n} from '../../helpers/interfaces/componentsInterfaces/StateAndEvents';\r\nimport style from '../../themes/reactPagination.module.scss';\r\nimport { useCustomActions } from '../../helpers/functions/useCustomActions';\r\nimport { mobileLayout, mobileVersionLayout, mobileVersionList } from '../../helpers/constants/mobileSize';\r\nimport { MultiSelectEntities } from '../../uiComponents/MultiSelectEntities';\r\nimport { SearchNotFound } from './SearchNotFound';\r\nimport { routePaths } from '../../helpers/constants/routePaths';\r\n\r\nconst actionCreator = {\r\n  loadChunkTeams,\r\n  loadChunkPlayers,\r\n};\r\n\r\ninterface IProps {\r\n  isTeam: boolean,\r\n}\r\n\r\nexport const EntitiesMarkUp: FC<IProps> = React.memo(({\r\n  isTeam,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const typedSelectedChunk = useSelector<StoreReducer, IDataSelected>(\r\n    isTeam\r\n      ? teamsChunkSelector\r\n      : playersChunkSelector,\r\n  );\r\n  const typedSelectedAll = useSelector<StoreReducer, ISelectedDataAll>(\r\n    isTeam\r\n      ? allTeamsSelector\r\n      : allPlayersSelector,\r\n  );\r\n\r\n  const teamsOptions = useSelector(teamsForSelectPlayer);\r\n\r\n  const token = useSelector(({ authDataUser: { authData } }: StoreReducer) => authData.token);\r\n  const history = useHistory();\r\n  const {\r\n    loadChunkTeams: loadNewChunkTeams,\r\n    loadChunkPlayers: loadNewChunkPlayers,\r\n  } = useCustomActions(actionCreator);\r\n\r\n  const loadNewChunk = isTeam ? loadNewChunkTeams : loadNewChunkPlayers;\r\n\r\n  const [chunkData, setChunkData] = useState<IStateChangeEntities>({\r\n    name: '',\r\n    teams: [],\r\n    page: 1,\r\n    size: '6',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadNewChunk({ chunkData, token });\r\n  }, []);\r\n\r\n  const changeNameEntity = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newNameChunk = { ...chunkData, name: target.value };\r\n    setChunkData(newNameChunk);\r\n    loadNewChunk({ chunkData: newNameChunk, token });\r\n  };\r\n\r\n  const changeSize = (option: IOption) => {\r\n    if (chunkData.size !== option.value) {\r\n      const newSizeChunk = { ...chunkData, page: 1, size: option.value };\r\n      setChunkData(newSizeChunk);\r\n      loadNewChunk({ chunkData: newSizeChunk, token });\r\n    }\r\n  };\r\n\r\n  const changePage = (page: IPaginationValue) => {\r\n    const newPageChunk = { ...chunkData, page: page.selected + 1 };\r\n    setChunkData(newPageChunk);\r\n    loadNewChunk({ chunkData: newPageChunk, token });\r\n  };\r\n\r\n  const addCommandSearch = (options: IOption[]) => {\r\n    let newCommandsChunk;\r\n    if (options) {\r\n      newCommandsChunk = { ...chunkData, teams: [...options] };\r\n    } else {\r\n      newCommandsChunk = { ...chunkData, teams: [] };\r\n    }\r\n    setChunkData(newCommandsChunk);\r\n    loadNewChunk({ chunkData: newCommandsChunk, token });\r\n  };\r\n\r\n  const showAddNewEntityForm = useCallback(() => {\r\n    history.push(isTeam ? routePaths.teamAdd : routePaths.playerAdd);\r\n  }, []);\r\n\r\n  return (\r\n    typedSelectedAll.length > 0 ? (\r\n\r\n      <ContainerTeams>\r\n        <HeaderTeams>\r\n          <FieldGroup>\r\n            <FieldSearch onChange={debounce(changeNameEntity, 300)} />\r\n            {!isTeam && (\r\n            <MultiSelectEntities\r\n              options={teamsOptions}\r\n              isMulti\r\n              isPlaceholder={t('markup:select')}\r\n              isForm={false}\r\n              onChange={addCommandSearch}\r\n            />\r\n            )}\r\n          </FieldGroup>\r\n          <ButtonAction\r\n            isNegativeStyle={false}\r\n            isAdding\r\n            size=\"small\"\r\n            text={t('markup:add')}\r\n            disabled={false}\r\n            type=\"button\"\r\n            onClick={showAddNewEntityForm}\r\n          />\r\n        </HeaderTeams>\r\n        <TeamsBody>\r\n          {typedSelectedChunk.chunkEntities.length > 0\r\n            ? <ListBase type={isTeam ? 'team' : 'player'} entities={typedSelectedChunk.chunkEntities} />\r\n            : <SearchNotFound />}\r\n        </TeamsBody>\r\n        <TeamsFooter>\r\n          {typedSelectedChunk.chunkEntities.length > 0 && (\r\n          <>\r\n            <ReactPaginate\r\n              previousLabel={<PaginationCountBtn type=\"prev\" />}\r\n              nextLabel={<PaginationCountBtn type=\"next\" />}\r\n              breakLabel={<PaginationCountBtn type=\"break\" />}\r\n              pageClassName={style.itemPagination}\r\n              pageLinkClassName={style.itemLinkPagination}\r\n              containerClassName={style.paginationContainer}\r\n              activeClassName={style.activeClassName}\r\n              onPageChange={changePage}\r\n              initialPage={chunkData.page - 1}\r\n              pageCount={typedSelectedChunk.countEntities / typedSelectedChunk.sizePageEntities}\r\n              pageRangeDisplayed={2}\r\n              marginPagesDisplayed={1}\r\n            />\r\n\r\n            <SelectCounts onChange={changeSize} />\r\n          </>\r\n          )}\r\n        </TeamsFooter>\r\n      </ContainerTeams>\r\n    )\r\n      : <EmptyEntity isTeam={isTeam} />\r\n  );\r\n});\r\n\r\nconst ContainerTeams = styled.div`\r\n  margin: 32px auto 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  \r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    margin: 32px 0 0;\r\n  }\r\n  @media (max-width: 325px) {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n\r\nconst HeaderTeams = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 32px;\r\n  \r\n  @media (max-width: ${mobileVersionLayout}) {\r\n    flex-direction: column;\r\n    align-self: stretch;\r\n    \r\n    & > button {\r\n      margin-top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FieldGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-basis: 66%;\r\n  & > div {\r\n    display: flex;\r\n    flex-basis: 48.5%;\r\n    & > input {\r\n      flex-grow: 1;\r\n    }\r\n    @media(max-width: ${mobileVersionLayout}) {\r\n      & {\r\n        margin-bottom: 16px;\r\n      }\r\n    }\r\n  }\r\n  & > label {\r\n    flex-basis: 48.5%;\r\n  }\r\n  \r\n  @media(max-width: ${mobileVersionList}) {\r\n    flex-basis: 84%;\r\n  }\r\n  \r\n  @media(max-width: ${mobileVersionLayout}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst TeamsBody = styled.div`\r\n  margin: 0 0 auto;\r\n`;\r\n\r\nconst TeamsFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  padding-bottom: 32px;\r\n\r\n  @media (max-width: ${mobileLayout}) {\r\n    padding-bottom: 16px;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport Select from 'react-select';\r\nimport styled from 'styled-components';\r\nimport { TextSmall, TextExtraSmall } from './Typography';\r\nimport { mobileVersionLayout } from '../helpers/constants/mobileSize';\r\nimport { buildStyleSelect } from '../helpers/functions/buildStylesSelect';\r\n\r\ninterface IOptions {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface IProps {\r\n  options: IOptions[],\r\n  isMulti: boolean,\r\n  isPlaceholder: string,\r\n  onChange: (value: any) => void;\r\n  isForm?: boolean;\r\n  defaultValue?: IOptions;\r\n  isError?: boolean,\r\n  text?: string;\r\n}\r\n\r\nexport const MultiSelectEntities: FC<IProps> = React.memo(({\r\n  options,\r\n  isMulti,\r\n  isPlaceholder,\r\n  text,\r\n  isForm = false,\r\n  defaultValue,\r\n  isError,\r\n  onChange,\r\n}) => (\r\n  <SelectLabel>\r\n    {text && <TextLabel>{text}</TextLabel>}\r\n    <Select\r\n      isSearchable={false}\r\n      onChange={onChange}\r\n      placeholder={isPlaceholder}\r\n      isMulti={isMulti}\r\n      isClearable\r\n      isError={isError}\r\n      isForm={isForm}\r\n      styles={buildStyleSelect()}\r\n      options={options}\r\n      defaultValue={defaultValue}\r\n    />\r\n    {isError && <TextError>Required</TextError>}\r\n  </SelectLabel>\r\n));\r\n\r\nconst SelectLabel = styled.label`\r\n  position: relative;\r\n`;\r\n\r\nconst TextLabel = styled(TextSmall)`\r\n  color: ${(props) => props.theme.colors.middleGrey};\r\n  @media(max-width: ${mobileVersionLayout}) {\r\n    font-size: 17px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n\r\nconst TextError = styled(TextExtraSmall)`\r\n  color: ${(props) => props.theme.colors.lightestRed};\r\n  position: absolute;\r\n  bottom: -23px;\r\n`;\r\n","import { theme } from '../../themes/theme';\r\n\r\nexport const buildStyleSelect = () => ({\r\n  clearIndicator: (styles: any) => ({\r\n    ...styles,\r\n    color: theme.colors.lightGrey,\r\n  }),\r\n  dropdownIndicator: (styles: any) => ({\r\n    ...styles,\r\n    color: theme.colors.lightGrey,\r\n  }),\r\n  control: (styles: any, { selectProps }: any) => ({\r\n    ...styles,\r\n    backgroundColor: selectProps.isForm ? theme.colors.lightestGrey : theme.colors.white,\r\n    borderColor: selectProps.isError ? theme.colors.lightestRed : selectProps.isForm ? 'transparent' : theme.colors.lightGrey,\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '40px',\r\n    ':hover': {\r\n      borderColor: theme.colors.lightGrey,\r\n      backgroundColor: selectProps.isForm ? theme.colors.lightestGrey : theme.colors.white,\r\n    },\r\n    maxHeight: '40px',\r\n  }),\r\n  option: (styles: any, state: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: '500',\r\n    fontSize: '14px',\r\n    lineHeight: '24px',\r\n    color: state.isFocused ? theme.colors.white : theme.colors.grey,\r\n    backgroundImage: (state.data.imageSrc && `url(${state.data.imageSrc})`),\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'right 15px center',\r\n    backgroundSize: '22px 22px',\r\n    backgroundColor: (state.isFocused && theme.colors.lightestRed),\r\n    cursor: 'pointer',\r\n    wordBreak: 'break-word',\r\n    borderBottom: !state.data.isLast && `1px solid ${theme.colors.lightGrey}`,\r\n    ':active': {\r\n      backgroundColor: theme.colors.darkRed,\r\n      color: theme.colors.white,\r\n    },\r\n    '@media(max-width: 1300px)': {\r\n      fontSize: '15px',\r\n    },\r\n    '@media(max-width: 930px)': {\r\n      fontSize: '18px',\r\n    },\r\n    '@media(max-width: 475px)': {\r\n      fontSize: '15px',\r\n    },\r\n  }),\r\n  multiValue: (styles: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: 'normal',\r\n    fontSize: '14px',\r\n    lineHeight: '19px',\r\n    padding: '1px 4px',\r\n    borderRadius: '4px',\r\n    color: theme.colors.white,\r\n    backgroundColor: theme.colors.red,\r\n\r\n  }),\r\n  singleValue: (styles: any, { selectProps }: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: selectProps.isForm ? '500' : 'normal',\r\n    fontSize: '14px',\r\n    lineHeight: selectProps.isForm ? '24px' : '19px',\r\n    padding: '1px 4px',\r\n    borderRadius: '4px',\r\n    color: selectProps.isForm ? theme.colors.darkGrey : theme.colors.white,\r\n    backgroundColor: selectProps.isForm ? 'transparent' : theme.colors.red,\r\n    paddingLeft: '0',\r\n    marginLeft: '0',\r\n    '@media(max-width: 380px)': {\r\n      fontSize: '11px',\r\n    },\r\n    '@media(max-width: 320px)': {\r\n      whiteSpace: 'break-spaces',\r\n      wordBreak: 'break-all',\r\n      lineHeight: 'normal',\r\n    },\r\n  }),\r\n  multiValueLabel: (styles: any) => ({\r\n    ...styles,\r\n    color: theme.colors.white,\r\n  }),\r\n  placeholder: (styles: any) => ({\r\n    ...styles,\r\n    fontStyle: 'normal',\r\n    fontWeight: '500',\r\n    fontSize: '14px',\r\n    lineHeight: '24px',\r\n    color: theme.colors.middleGrey,\r\n    marginLeft: '0',\r\n  }),\r\n  input: (styles: any) => ({\r\n    ...styles,\r\n    padding: '4px 8px',\r\n  }),\r\n  menuList: (styles: any) => ({\r\n    ...styles,\r\n    scrollbarColor: `${theme.colors.grey} ${theme.colors.lightestGrey}`,\r\n    scrollbarWidth: 'thin',\r\n    padding: '0',\r\n    '::-webkit-scrollbar-track': {\r\n      backgroundColor: theme.colors.lightestGrey,\r\n    },\r\n\r\n    '::-webkit-scrollbar-thumb': {\r\n      '-webkit-border-radius': '0px',\r\n      borderRadius: '0px',\r\n      backgroundColor: theme.colors.grey,\r\n    },\r\n\r\n    '::-webkit-scrollbar': {\r\n      width: '2px',\r\n    },\r\n  }),\r\n  valueContainer: (styles: any) => ({\r\n    ...styles,\r\n    overflow: 'auto',\r\n    maxHeight: '40px',\r\n    height: '40px',\r\n    scrollbarColor: `${theme.colors.grey} ${theme.colors.lightestGrey}`,\r\n    scrollbarWidth: 'thin',\r\n    padding: '0 12px',\r\n\r\n    '::-webkit-scrollbar-track': {\r\n      backgroundColor: theme.colors.lightestGrey,\r\n    },\r\n\r\n    '::-webkit-scrollbar-thumb': {\r\n      '-webkit-border-radius': '0px',\r\n      borderRadius: '0px',\r\n      backgroundColor: theme.colors.grey,\r\n    },\r\n\r\n    '::-webkit-scrollbar': {\r\n      width: '1px',\r\n    },\r\n  }),\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"reactPagination_paginationContainer__3vKl3\",\"itemPagination\":\"reactPagination_itemPagination__3uiJl\",\"itemLinkPagination\":\"reactPagination_itemLinkPagination__1YBlz\",\"activeClassName\":\"reactPagination_activeClassName__2wG9f\"};"],"sourceRoot":""}